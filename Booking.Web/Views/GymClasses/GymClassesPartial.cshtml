@model IEnumerable<GymClass>


@{   
    var inAdminRole = User.IsInRole("Admin");
}

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Duration)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>


        @if (User.Identity != null && User.Identity.IsAuthenticated)  // Om inloggad
        {
            string userId = User.FindFirst(ClaimTypes.NameIdentifier).Value;  // Id på den inloggade användaren


            if (inAdminRole)
            {
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                    @if (item.AttendingMembers.Any(m => m.ApplicationUserId == userId))  // Tittar om id på den inloggade finns med bland attending members
                    {
                        <a asp-action="BookingToggle" asp-route-id="@item.Id">Unbook</a>
                    }
                    else
                    {
                        <a asp-action="BookingToggle" asp-route-id="@item.Id">Book</a>
                    }
                </td>
            }
            else     // Ej admin
            {
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    @if (item.AttendingMembers.Any(m => m.ApplicationUserId == userId))
                    {
                        <a asp-action="BookingToggle" asp-route-id="@item.Id">Unbook</a>
                    }
                    else
                    {
                        <a asp-action="BookingToggle" asp-route-id="@item.Id">Book</a>
                    }
                </td>
            }
        }
    </tr>
}